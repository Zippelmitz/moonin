#!/usr/bin/perl
#
#

use strict;
use warnings;

use FindBin;
use lib ("$FindBin::Bin/../lib");
use Schedule::Cron;
use Moonin::Config;
use Moonin::Node;
use Moonin::Graph;
use Log::Log4perl qw(:levels);

my $conf = q(
log4perl.rootLogger=INFO, Screen
log4perl.appender.Screen=Log::Log4perl::Appender::Screen
log4perl.appender.Screen.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.Screen.stderr=0
log4perl.appender.Screen.layout.ConversionPattern=[%d] [%C (%L)] [%p] %m%n
            );
Log::Log4perl::init( \$conf );

my $nodes = {};

sub log_method {
  my ( $level, $msg ) = @_;
  my $DBG_MAP = { 0 => $INFO, 1 => $WARN, 2 => $ERROR };

  my $logger = Log::Log4perl->get_logger("Moonin");
  $logger->log( $DBG_MAP->{$level}, $msg );
}

# First, poll the nodes
sub dispatch {
  my ( $domain, $node, $type ) = @_;

  my $logger = Log::Log4perl->get_logger("Moonin");
  $logger->info("Fetching node $domain $node");
  $nodes->{$domain}->{$node}->{node}->process;
  $logger->info("Pre-Processing graphs for $domain $node");
  $nodes->{$domain}->{$node}->{graph}->pre_process_all;
}

# Optionally, graph the results
sub graph {
  my $logger = Log::Log4perl->get_logger("Moonin");
  foreach my $domain ( keys( %{$nodes} ) ) {
    foreach my $node ( keys( %{ $nodes->{$domain} } ) ) {
      $logger->info("Graphing node $domain $node");
      $nodes->{$domain}->{$node}->{graph}->process_all;
      $logger->info("Finished graphing node $domain $node");
    }
  }
}

my $config =
  Moonin::Config->new( config_file => "$FindBin::Bin/../conf/moonin.conf" );
my $cron = Schedule::Cron->new( \&dispatch, log => \&log_method );
foreach my $domain ( keys( %{ $config->domain } ) ) {
  foreach my $node ( keys( %{ $config->domain->{$domain}->{node} } ) ) {
    $nodes->{$domain}->{$node}->{node} = Moonin::Node->new(
      domain => $domain,
      name   => $node,
      config => $config,
    );
    $nodes->{$domain}->{$node}->{graph} =
      Moonin::Graph->new( node => $nodes->{$domain}->{$node}->{node} );
    $cron->add_entry( "*/5 * * * *", [ $domain, $node ] );
  }
}

$cron->run;

exit 0;
